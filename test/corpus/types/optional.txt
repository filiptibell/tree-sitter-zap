==================
Optional primitives
==================

type MaybeString = string?
type MaybeNumber = u32?
type MaybeVector = Vector3?
type MaybeCFrame = CFrame?

---

(source_file
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type))))))

==================
Optional with ranges
==================

type MaybeSmallString = string(0..10)?
type MaybeBigNumber = u32[100..]?
type MaybeExactSize = string(20)?

---

(source_file
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)
          (range
            (range_inexact
              (number)
              (number)))))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)
          (array
            (array_inexact
              (number)))))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)
          (range
            (range_exact
              (number))))))))

==================
Optional complex types
==================

type MaybeStruct = struct {
    name: string,
    age: u8
}?

type MaybeSet = set { string }?

type MaybeMap = map { [string]: u32 }?

type MaybeEnum = enum {
    A, B, C
}?

---

(source_file
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (struct_type
            properties: (property
              name: (identifier)
              type: (type
                (primitive_type)))
            properties: (property
              name: (identifier)
              type: (type
                (primitive_type))))))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (set_type
            type: (type
              (primitive_type)))))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (map_type
            key_type: (type
              (primitive_type))
            value_type: (type
              (primitive_type)))))))
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (enum_type
            (enum_variant
              (identifier))
            (enum_variant
              (identifier))
            (enum_variant
              (identifier))))))))

==================
Optional with comments
==================

-- Maybe it exists, maybe it doesn't
type MaybeValue = string?

type PlayerData = struct {
    -- Optional fields
    nickname: string?,
    title: string(1..20)?,
    -- Required fields
    id: u32,
    name: string
}

---

(source_file
  (comment)
  (type_declaration
    name: (identifier)
    value: (type
      (optional_type
        type: (type
          (primitive_type)))))
  (type_declaration
    name: (identifier)
    value: (type
      (struct_type
        (comment)
        properties: (property
          name: (identifier)
          type: (type
            (optional_type
              type: (type
                (primitive_type)))))
        properties: (property
          name: (identifier)
          type: (type
            (optional_type
              type: (type
                (primitive_type)
                (range
                  (range_inexact
                    (number)
                    (number)))))))
        (comment)
        properties: (property
          name: (identifier)
          type: (type
            (primitive_type)))
        properties: (property
          name: (identifier)
          type: (type
            (primitive_type)))))))
